
import java.sql.Date;
//import java.semplate ;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
//in the editor.
// */

/**
 *
 * @author acv
 */
public class RoomSchedulerFrame extends javax.swing.JFrame {

    /**
     * Creates new form RoomSchedulerFrame
     */
    public RoomSchedulerFrame() {
        initComponents();

        // Load the combo boxes with data.
        rebuildFacultyComboBoxes();
        rebuildDateComboBoxes();
        rebuildStatusComboBoxes();
        rebuildDateComboBox();
        rebuildFacultysComboBox();
        rebuildCheckFacultycombobox();
        rebuildAllRooms();
    }

    public void rebuildFacultyComboBoxes() {
        reserveFacultyComboBox.setModel(new javax.swing.DefaultComboBoxModel(Faculty.getFacultyList().toArray()));
        
    }
    
    public void rebuildAllRooms(){
        RoomcomboBox.setModel(new javax.swing.DefaultComboBoxModel(RoomQueries.getAllRooms().toArray()));
    }
    
    public void rebuildCheckFacultycombobox(){
        facultycombostatusbox.setModel(new javax.swing.DefaultComboBoxModel(Faculty.getFacultyList().toArray()));
    }

    public void rebuildDateComboBoxes() {
        reserveDateComboBox.setModel(new javax.swing.DefaultComboBoxModel(Dates.getAllDates().toArray()));
    }
    
    public void rebuildStatusComboBoxes(){
        DateReservation.setModel(new javax.swing.DefaultComboBoxModel(Dates.getAllDates().toArray()));
        
    }
    
    public void rebuildDateComboBox(){
        DateComboBox.setModel(new javax.swing.DefaultComboBoxModel(Dates.getAllDates().toArray()));
    }
    public void rebuildFacultysComboBox() {
        FacultyComboBox.setModel(new javax.swing.DefaultComboBoxModel(Faculty.getFacultyList().toArray()));
        
    }
    
    
    /*
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        D = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        addFacultyTextField = new javax.swing.JTextField();
        addFacultyButton = new javax.swing.JButton();
        addFacultyStatusLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        reserveFacultyComboBox = new javax.swing.JComboBox<String>();
        jLabel5 = new javax.swing.JLabel();
        reserveDateComboBox = new javax.swing.JComboBox<String>();
        jLabel6 = new javax.swing.JLabel();
        reserveSeatsTextField = new javax.swing.JTextField();
        reserveSubmitButton = new javax.swing.JButton();
        reserveStatusLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        DateReservation = new javax.swing.JComboBox();
        ReservationStatusButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        StatusText = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        WaitListStatusButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        WaitlistStatus = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        FacultyComboBox = new javax.swing.JComboBox();
        DateComboBox = new javax.swing.JComboBox();
        CancelButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        CancelArea = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        DropButton = new javax.swing.JButton();
        RoomcomboBox = new javax.swing.JComboBox();
        DropRoomLabel = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        DropRoomArea = new javax.swing.JTextArea();
        jPanel8 = new javax.swing.JPanel();
        AddDateSpinner = new javax.swing.JSpinner();
        AddDate = new javax.swing.JButton();
        DateLabel = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        facultycombostatusbox = new javax.swing.JComboBox();
        CheckStatusButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        WaitlistStatusArea = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        ReservationStatusAreas = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        RoomLabel = new javax.swing.JLabel();
        RoomTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        SeatsTextField = new javax.swing.JTextField();
        RoomSubmitButton = new javax.swing.JButton();
        RoomsLabel = new javax.swing.JLabel();
        ROOMTEXT = new javax.swing.JLabel();
        ROOMLABEL = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        ROOMAREA = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("Room Scheduler");

        jLabel2.setText("Faculty Name: ");

        addFacultyTextField.setColumns(20);

        addFacultyButton.setText("Submit");
        addFacultyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFacultyButtonActionPerformed(evt);
            }
        });

        addFacultyStatusLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        addFacultyStatusLabel.setText("    ");

        jLabel7.setText("   ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addFacultyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(addFacultyButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addFacultyStatusLabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(addFacultyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(addFacultyButton)
                .addGap(18, 18, 18)
                .addComponent(addFacultyStatusLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addContainerGap(276, Short.MAX_VALUE))
        );

        D.addTab("Add Faculty", jPanel1);

        jLabel4.setText("Faculty: ");

        jLabel5.setText("Date: ");

        jLabel6.setText("Seats Required: ");

        reserveSeatsTextField.setColumns(3);
        reserveSeatsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveSeatsTextFieldActionPerformed(evt);
            }
        });

        reserveSubmitButton.setText("Submit");
        reserveSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveSubmitButtonActionPerformed(evt);
            }
        });

        reserveStatusLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        reserveStatusLabel.setText("   ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(reserveFacultyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(reserveDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(reserveSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(reserveSubmitButton)
                            .addGap(26, 26, 26)))
                    .addComponent(reserveStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(812, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(reserveFacultyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(reserveDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(reserveSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(reserveSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(reserveStatusLabel)
                .addContainerGap(193, Short.MAX_VALUE))
        );

        D.addTab("Reserve Room", jPanel2);

        jLabel3.setText("Date");

        DateReservation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        DateReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateReservationActionPerformed(evt);
            }
        });

        ReservationStatusButton.setText("Check Reservation Status");
        ReservationStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReservationStatusButtonActionPerformed(evt);
            }
        });

        StatusText.setColumns(20);
        StatusText.setRows(5);
        jScrollPane2.setViewportView(StatusText);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(349, 349, 349)
                .addComponent(DateReservation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(ReservationStatusButton))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 980, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(235, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(DateReservation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ReservationStatusButton)
                .addGap(43, 43, 43)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        D.addTab("Reservations By Date", jPanel3);

        WaitListStatusButton.setText("Check Waitlist Status");
        WaitListStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WaitListStatusButtonActionPerformed(evt);
            }
        });

        WaitlistStatus.setColumns(20);
        WaitlistStatus.setRows(5);
        jScrollPane1.setViewportView(WaitlistStatus);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(455, 455, 455)
                .addComponent(WaitListStatusButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(128, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 994, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(WaitListStatusButton)
                .addGap(80, 80, 80)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        D.addTab("WaitList", jPanel4);

        jLabel8.setText("Faculty");

        jLabel9.setText("Date");

        FacultyComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        DateComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        CancelButton.setText("Cancel");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        CancelArea.setColumns(20);
        CancelArea.setRows(5);
        jScrollPane3.setViewportView(CancelArea);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(362, 362, 362)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FacultyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(294, 294, 294)
                        .addComponent(CancelButton))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 904, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(272, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(FacultyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(DateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65)
                .addComponent(CancelButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        D.addTab("Cancel", jPanel5);

        jLabel10.setText("Room");

        DropButton.setText("Drop");
        DropButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DropButtonActionPerformed(evt);
            }
        });

        RoomcomboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        DropRoomLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        DropRoomArea.setColumns(20);
        DropRoomArea.setRows(5);
        jScrollPane7.setViewportView(DropRoomArea);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(jLabel10)
                        .addGap(390, 390, 390)
                        .addComponent(RoomcomboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(431, 431, 431)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DropRoomLabel)
                            .addComponent(DropButton)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 671, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(423, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(RoomcomboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(111, 111, 111)
                .addComponent(DropButton)
                .addGap(56, 56, 56)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DropRoomLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        D.addTab("Drop Room", jPanel7);

        AddDateSpinner.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1576024822153L), null, null, java.util.Calendar.DAY_OF_MONTH));

        AddDate.setText("Add");
        AddDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddDateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(512, 512, 512)
                        .addComponent(AddDate))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(337, 337, 337)
                        .addComponent(AddDateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(496, 496, 496)
                        .addComponent(DateLabel)))
                .addContainerGap(466, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(AddDateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81)
                .addComponent(AddDate)
                .addGap(62, 62, 62)
                .addComponent(DateLabel)
                .addContainerGap(102, Short.MAX_VALUE))
        );

        D.addTab("Add Date", jPanel8);

        jLabel12.setText("Faculty");

        facultycombostatusbox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        CheckStatusButton.setText("Check Status");
        CheckStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckStatusButtonActionPerformed(evt);
            }
        });

        jLabel13.setText("Reservation Status");

        jLabel14.setText("Waitlist Status");

        WaitlistStatusArea.setColumns(20);
        WaitlistStatusArea.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        WaitlistStatusArea.setRows(5);
        jScrollPane5.setViewportView(WaitlistStatusArea);

        ReservationStatusAreas.setColumns(20);
        ReservationStatusAreas.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ReservationStatusAreas.setRows(5);
        jScrollPane4.setViewportView(ReservationStatusAreas);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 162, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(facultycombostatusbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel14)))
                .addGap(281, 281, 281))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(501, 501, 501)
                .addComponent(CheckStatusButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(facultycombostatusbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(CheckStatusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75))
        );

        D.addTab("Checking Status By Faculty", jPanel9);

        RoomLabel.setText("Room Name");

        jLabel11.setText("Seats");

        RoomSubmitButton.setText("Submit");
        RoomSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RoomSubmitButtonActionPerformed(evt);
            }
        });

        ROOMTEXT.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        ROOMAREA.setColumns(20);
        ROOMAREA.setRows(5);
        jScrollPane6.setViewportView(ROOMAREA);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(RoomLabel))
                        .addGap(414, 414, 414)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(RoomTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                            .addComponent(SeatsTextField)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(360, 360, 360)
                        .addComponent(RoomsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ROOMTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(RoomSubmitButton, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                                .addComponent(ROOMLABEL)))))
                .addContainerGap(414, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RoomLabel)
                    .addComponent(RoomTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(SeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(71, 71, 71)
                .addComponent(RoomSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ROOMTEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ROOMLABEL)
                .addGap(20, 20, 20)
                .addComponent(RoomsLabel)
                .addGap(71, 71, 71))
        );

        D.addTab("Add Room", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(D, javax.swing.GroupLayout.PREFERRED_SIZE, 1251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(738, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(D, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(502, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void WaitListStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WaitListStatusButtonActionPerformed
        // TODO add your handling code here:
        ArrayList<WaitlistEntry> waitlist=new ArrayList<>();
        waitlist=WaitlistQueries.getWaitlistByDate();
        WaitlistStatus.setText("");
        for(int i=0;i<waitlist.size();i++){
            WaitlistStatus.append(waitlist.get(i).getFaculty()+" "+waitlist.get(i).getDate()+" "+waitlist.get(i).getSeats()+"\n");
        }
    }//GEN-LAST:event_WaitListStatusButtonActionPerformed

    private void ReservationStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReservationStatusButtonActionPerformed
        // TODO add your handling code here:
        rebuildDateComboBoxes();

        ArrayList<String> rooms=new ArrayList<>();
        ArrayList<String> faculty=new ArrayList<>();
        ArrayList<ReservationEntry> reservationList=new ArrayList<>();
        Date date = Date.valueOf(DateReservation.getSelectedItem().toString());
        reservationList=ReservationQueries.getReservationsByDate(date);
        rooms=ReservationQueries.getRoomsReservedByDate(date);
        faculty=ReservationQueries.getFacultybyReservedDates(date);
        StatusText.setText("");
        for(int i=0;i<reservationList.size();i++){
            StatusText.append(faculty.get(i)+"reserves room"+rooms.get(i)+"\n");

        }

    }//GEN-LAST:event_ReservationStatusButtonActionPerformed

    private void DateReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateReservationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DateReservationActionPerformed

    private void reserveSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveSubmitButtonActionPerformed
        String name = reserveFacultyComboBox.getSelectedItem().toString();
        Date date = Date.valueOf(reserveDateComboBox.getSelectedItem().toString());
        String seatText = reserveSeatsTextField.getText();
        int seats = Integer.parseInt(seatText);
        java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());

        ArrayList<String> reseveredRooms = ReservationQueries.getRoomsReservedByDate(date);
        ArrayList<String> possibleRooms = RoomQueries.getAllPossibleRooms(seats);
        for (String room : possibleRooms) {

            if (!reseveredRooms.contains(room)) {
                ReservationQueries.addReservationEntry(name, room, date, seats, currentTimestamp);
                reserveStatusLabel.setText(name + " has reserved room " + room);//set status
                return;

            }}

            //enter waitlist
            WaitlistQueries.addWaitlistEntry(name, date, seats, currentTimestamp);
            reserveStatusLabel.setText(name + " has been added to waitlist for "+ seats +" seats");//ststus

    }//GEN-LAST:event_reserveSubmitButtonActionPerformed

    private void reserveSeatsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveSeatsTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reserveSeatsTextFieldActionPerformed

    private void addFacultyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFacultyButtonActionPerformed
        // Add the faculty to the faculty table.
        String name = addFacultyTextField.getText();
        Faculty.addFaculty(name);
        addFacultyStatusLabel.setText(name + " has been added to the faculty.");

        // rebuild the reservation faculty combo box.
        rebuildFacultyComboBoxes();
        rebuildFacultysComboBox();
        rebuildCheckFacultycombobox();


    }//GEN-LAST:event_addFacultyButtonActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        // TODO add your handling code here:
        String name = FacultyComboBox.getSelectedItem().toString();
        Date date = Date.valueOf(DateComboBox.getSelectedItem().toString());
        java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
       //ArrayList<ReservationEntry> reserve=ReservationQueries.getReservationsByFaculty(name);
       ArrayList<String> faculty=ReservationQueries.getFacultybyReservedDates(date);
       //String roomname=reserve.get(0).getRoom();
       //int seats=RoomQueries.getCapacityForRooms(roomname);
       ArrayList<WaitlistEntry> waitlist=new ArrayList<>();
       waitlist=WaitlistQueries.getWaitlistByDate();
        
        if (faculty.contains(name)==true){
                ArrayList<ReservationEntry> reserve=ReservationQueries.getReservationsByFaculty(name);
                String roomname=reserve.get(0).getRoom();
                int seats=RoomQueries.getCapacityForRooms(roomname);
                ReservationQueries.cancelReservation(name,date);
                CancelArea.append(name+" on "+date+" gets cancelled");
                for(int i=0;i<waitlist.size();i++){
                   
                    if (date.compareTo(waitlist.get(i).getDate())==0  & waitlist.get(i).getSeats()<=seats){
                        WaitlistQueries.cancelWaitlistEntry(waitlist.get(i).getFaculty(),date);
                        ReservationQueries.addReservationEntry(waitlist.get(i).getFaculty(),roomname,waitlist.get(i).getDate(),waitlist.get(i).getSeats(),currentTimestamp);
                        CancelArea.append("\n");
                        CancelArea.append("\n"+waitlist.get(i).getFaculty()+" gets room "+roomname+" reserved");
                        break;
                     }
                    else{};
                }
                
        }     
        else{
                WaitlistQueries.cancelWaitlistEntry(name,date);
                CancelArea.setText(name+" gets cancelled from waitlist");
        }
        

        
    }//GEN-LAST:event_CancelButtonActionPerformed

    private void RoomSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RoomSubmitButtonActionPerformed
        // TODO add your handling code here:
        String name = RoomTextField.getText();
        String seats=SeatsTextField.getText();
        int seats_number= Integer.parseInt(seats);
        RoomQueries.addRoom(name, seats_number);
        ROOMAREA.setText(name+" room added"+"\n");
        java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
        ArrayList<WaitlistEntry> waitlist=new ArrayList<>();
        waitlist=WaitlistQueries.getWaitlistByDate();
            for(int i=0;i<waitlist.size();i++){
                if (waitlist.get(i).getSeats()<=seats_number){
                    ArrayList<String> reservedrooms=ReservationQueries.getRoomsReservedByDate(waitlist.get(i).getDate());
                    if(!reservedrooms.contains(name)){
                WaitlistQueries.cancelWaitlistEntry(waitlist.get(i).getFaculty(),waitlist.get(i).getDate());
                ReservationQueries.addReservationEntry(waitlist.get(i).getFaculty(),name,waitlist.get(i).getDate(),waitlist.get(i).getSeats(),currentTimestamp);
                ROOMAREA.append(waitlist.get(i).getFaculty()+" reserves " + name +" for "+ waitlist.get(i).getDate());
                ROOMAREA.append("\n");
                
             }
            }
        }
        //ROOMAREA.replaceSelection("");    
        rebuildAllRooms();   
       // ROOMAREA.setText(null);

    }//GEN-LAST:event_RoomSubmitButtonActionPerformed

    private void DropButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DropButtonActionPerformed
        // TODO add your handling code here:
        String roomname = RoomcomboBox.getSelectedItem().toString();
        RoomQueries.dropRoom(roomname);
        DropRoomArea.setText("room "+roomname+" has been dropped");
        ArrayList<ReservationEntry> droppedReservations=ReservationQueries.getReservationsByRoom(roomname);
        ReservationQueries.deleteReservation(roomname);

      //  ArrayList<String> reservedrooms=ReservationQueries.getRoomsReserved();
        java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
       
        
        for (int i=0;i<droppedReservations.size();i++){
            // fsculty date seats
            // use date to get reservations
            boolean booked =false;
            Date date=droppedReservations.get(i).getDate();
            ArrayList<String> reseveredRooms = ReservationQueries.getRoomsReservedByDate(date);
            int seats=droppedReservations.get(i).getSeats();
            ArrayList<String> possibleRooms = RoomQueries.getAllPossibleRooms(seats);
            for (String room:possibleRooms){
                
                if (!reseveredRooms.contains(room)){ // check for that date room
                    ReservationQueries.addReservationEntry(droppedReservations.get(i).getFaculty(),room,droppedReservations.get(i).getDate(),droppedReservations.get(i).getSeats(),currentTimestamp);
                    DropRoomArea.append("\n");
                    DropRoomArea.append(droppedReservations.get(i).getFaculty()+" "+ droppedReservations.get(i).getDate()+" is moved to waitlist");
                    DropRoomArea.append("\n");
                    DropRoomArea.append(droppedReservations.get(i).getFaculty()+" reserves"+ " room "+room+" on" + droppedReservations.get(i).getDate()+" from waitlist");
                    DropRoomArea.append("\n");
                    booked = true ;
                    return;                  
                }
                else{
                }
            }
            if (booked==false){
            WaitlistQueries.addWaitlistEntry(droppedReservations.get(i).getFaculty(),droppedReservations.get(i).getDate(),droppedReservations.get(i).getSeats(),currentTimestamp);
            DropRoomArea.append("\n");
            DropRoomArea.append(droppedReservations.get(i).getFaculty()+" "+ droppedReservations.get(i).getDate()+" is moved to waitlist");
            DropRoomArea.append("\n");

        }
   
        }
    rebuildAllRooms();
    

    }//GEN-LAST:event_DropButtonActionPerformed

    private void AddDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddDateActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
        String spinnerValue = formater.format(AddDateSpinner.getValue());
        Date date = Date.valueOf(spinnerValue);
        Dates.addDate(date);
        DateLabel.setText("Date "+spinnerValue+" added");
        rebuildDateComboBoxes();
        rebuildStatusComboBoxes();
        rebuildDateComboBox();


    }//GEN-LAST:event_AddDateActionPerformed

    private void CheckStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckStatusButtonActionPerformed
        // TODO add your handling code here:
        String name = facultycombostatusbox.getSelectedItem().toString();
        ArrayList<String> waitlist=WaitlistQueries.getWaitlistofAllFacultys();
        ArrayList<ReservationEntry> reservationlist=new ArrayList<>();
        ArrayList<String> facultyReservationList=ReservationQueries.getFacultyOnReservationList();
        if (facultyReservationList.contains(name)&&waitlist.contains(name)){
            reservationlist=ReservationQueries.getReservationsByFaculty(name);
            ReservationStatusAreas.setText("Reservation status for ");

            for (int i=0;i<reservationlist.size();i++){
                 ReservationStatusAreas.append("\n");
                 ReservationStatusAreas.append(reservationlist.get(i).getFaculty()+" reserved room "+reservationlist.get(i).getRoom()+" on "+reservationlist.get(i).getDate()); 
                 ReservationStatusAreas.append("\n");
            }
            ArrayList<WaitlistEntry> waitlist_faculty=new ArrayList<>();
            waitlist_faculty=WaitlistQueries.getWaitlistByFaculty(name);
            for (int j=0;j<waitlist_faculty.size();j++){
                WaitlistStatusArea.setText("Waitlist status for");
                WaitlistStatusArea.append("\n");
                WaitlistStatusArea.append(waitlist_faculty.get(j).getFaculty()+" wailisted on "+waitlist_faculty.get(j).getDate());
                WaitlistStatusArea.append("\n");

            }
             
        }
        else{
            if (facultyReservationList.contains(name)){
                reservationlist=ReservationQueries.getReservationsByFaculty(name);
                ReservationStatusAreas.setText("Reservation status for ");
                WaitlistStatus.setText("");
                ReservationStatusAreas.append("\n");


                for (int i=0;i<reservationlist.size();i++){
                    ReservationStatusAreas.append("\n");
                    ReservationStatusAreas.append(reservationlist.get(i).getFaculty()+" reserved room "+reservationlist.get(i).getRoom()+" on "+reservationlist.get(i).getDate()); 
                    ReservationStatusAreas.append("\n");

                }
            }
            else{
                ArrayList<WaitlistEntry> waitlist_faculty=new ArrayList<>();
                waitlist_faculty=WaitlistQueries.getWaitlistByFaculty(name);
                for (int j=0;j<waitlist_faculty.size();j++){
                   WaitlistStatusArea.setText("Waitlist status for");
                   WaitlistStatusArea .append("\n");
                    WaitlistStatusArea.append(waitlist_faculty.get(j).getFaculty()+" waitlisted on "+waitlist_faculty.get(j).getDate());
                    WaitlistStatusArea.append("\n");

                }
            }
        }
        

        
    }//GEN-LAST:event_CheckStatusButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RoomSchedulerFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddDate;
    private javax.swing.JSpinner AddDateSpinner;
    private javax.swing.JTextArea CancelArea;
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton CheckStatusButton;
    private javax.swing.JTabbedPane D;
    private javax.swing.JComboBox DateComboBox;
    private javax.swing.JLabel DateLabel;
    private javax.swing.JComboBox DateReservation;
    private javax.swing.JButton DropButton;
    private javax.swing.JTextArea DropRoomArea;
    private javax.swing.JLabel DropRoomLabel;
    private javax.swing.JComboBox FacultyComboBox;
    private javax.swing.JTextArea ROOMAREA;
    private javax.swing.JLabel ROOMLABEL;
    private javax.swing.JLabel ROOMTEXT;
    private javax.swing.JTextArea ReservationStatusAreas;
    private javax.swing.JButton ReservationStatusButton;
    private javax.swing.JLabel RoomLabel;
    private javax.swing.JButton RoomSubmitButton;
    private javax.swing.JTextField RoomTextField;
    private javax.swing.JComboBox RoomcomboBox;
    private javax.swing.JLabel RoomsLabel;
    private javax.swing.JTextField SeatsTextField;
    private javax.swing.JTextArea StatusText;
    private javax.swing.JButton WaitListStatusButton;
    private javax.swing.JTextArea WaitlistStatus;
    private javax.swing.JTextArea WaitlistStatusArea;
    private javax.swing.JButton addFacultyButton;
    private javax.swing.JLabel addFacultyStatusLabel;
    private javax.swing.JTextField addFacultyTextField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox facultycombostatusbox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JComboBox<String> reserveDateComboBox;
    private javax.swing.JComboBox<String> reserveFacultyComboBox;
    private javax.swing.JTextField reserveSeatsTextField;
    private javax.swing.JLabel reserveStatusLabel;
    private javax.swing.JButton reserveSubmitButton;
    // End of variables declaration//GEN-END:variables
}
